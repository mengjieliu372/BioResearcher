{
    "Part 1": [
        {
            "task_id": "Part 1-dry-experiment-1",
            "task_description": "Download tumor and normal tissue samples from TCGA and GTEx projects.",
            "input": "TCGA dataset ID: TCGA-LUS for soft tissue sarcoma (liposarcoma) cases; GTEx dataset ID: GTEx_Analysis_v8 for normal tissue samples. The input includes raw data files and metadata files indicating sample IDs, clinical characteristics, RNA sequencing data availability, and sample collection dates.",
            "output": "A processed dataset containing at least 20 normal tissue samples and a minimum of 10 tumor samples, including RNA sequencing data and associated metadata formatted in a structured database (e.g., CSV or Excel) for further analysis."
        },
        {
            "task_id": "Part 1-dry-experiment-2",
            "task_description": "Filter and organize the collected samples based on specific inclusion criteria.",
            "input": "Raw dataset containing all tumor and normal tissue samples downloaded from TCGA and GTEx with relevant metadata, including sample IDs, clinical data, RNA sequencing availability, and histopathological confirmation. Criteria include confirmed diagnosis of liposarcoma, availability of RNA sequencing data, and sufficient sample size.",
            "output": "A curated list of selected tumor and normal tissue samples that meet the inclusion criteria, formatted in a structured database or spreadsheet (e.g., CSV or Excel) for downstream analyses."
        },
        {
            "task_id": "Part 1-dry-experiment-3",
            "task_description": "Perform computational analysis on the RNA sequencing data.",
            "input": "RNA sequencing data files in formats such as FASTQ or BAM from the selected tumor and normal tissue samples, along with associated metadata for sample identification.",
            "output": "Processed RNA sequencing data, including gene expression quantification metrics (e.g., TPM, FPKM), differential expression results, and a summary report detailing the expression profiles of the collected samples presented in a structured format (e.g., CSV or Excel)."
        },
        {
            "task_id": "Part 1-dry-experiment-4",
            "task_description": "Analyze the immune profiling data computationally.",
            "input": "Digital microscopy images of immunohistochemistry stained slides to quantify immune cell density, processed using image analysis software (e.g., ImageJ, version X.X) to assess positive staining areas for immune markers.",
            "output": "Quantitative data representing the density of immune cells (macrophages, T-cells) in the tumor samples, presented in a structured format such as CSV or Excel for further statistical analysis and visualization."
        }
    ],
    "Part 2": [
        {
            "task_id": "Part 2-dry-experiment-1",
            "task_description": "Downloading RNA sequencing data from The Cancer Genome Atlas (TCGA) and Genotype-Tissue Expression (GTEx) projects.",
            "input": "Access to the GDC Data Portal (https://gdc.cancer.gov/) for TCGA data and the GTEx Portal (https://gtexportal.org/) for GTEx data. Project ID for TCGA: TCGA-LI-001 and GTEx ID: GTEX-1234. The expected input includes internet access and relevant software to utilize the GDC Data Transfer Tool.",
            "output": "Downloaded RNA sequencing data files (in formats such as FASTQ or BAM) for a total of 80 liposarcoma cases from TCGA and corresponding normal tissue samples from GTEx, verified for integrity using checksums."
        },
        {
            "task_id": "Part 2-dry-experiment-2",
            "task_description": "Performing quality control on the FASTQ files using FastQC.",
            "input": "FASTQ files obtained from the RNA sequencing data download. The input includes multiple FASTQ files, each representing sequencing reads from individual samples.",
            "output": "Summary reports generated by FastQC (in HTML or text format) assessing the quality of the sequencing data, identifying issues such as low-quality reads or adapter contamination."
        },
        {
            "task_id": "Part 2-dry-experiment-3",
            "task_description": "Trimming low-quality bases and removing adapter sequences using Trimmomatic.",
            "input": "Quality-controlled FASTQ files and Trimmomatic parameters: 'ILLUMINACLIP:TruSeq3-PE.fa:2:30:10' for adapter removal and 'SLIDINGWINDOW:4:20' for quality trimming. The input requires the Trimmomatic software and relevant adapter sequence files.",
            "output": "Cleaned FASTQ files (in the same format as input) with low-quality bases trimmed and adapter sequences removed, ready for alignment."
        },
        {
            "task_id": "Part 2-dry-experiment-4",
            "task_description": "Aligning cleaned reads to the human reference genome using STAR.",
            "input": "Cleaned FASTQ files and the human reference genome (GRCh38) in FASTA format, along with STAR parameters set for two-pass alignment. The input requires the STAR software.",
            "output": "Aligned read files in BAM format, representing the mapping of cleaned reads to the reference genome, along with a corresponding index file."
        },
        {
            "task_id": "Part 2-dry-experiment-5",
            "task_description": "Counting the number of reads mapping to each gene using featureCounts.",
            "input": "Aligned read files in BAM format and gene annotation files (e.g., GTF or GFF). The input includes the featureCounts software for the counting process.",
            "output": "A raw count matrix (in tabular format, such as CSV or TSV) indicating the number of reads mapping to each gene for all samples."
        },
        {
            "task_id": "Part 2-dry-experiment-6",
            "task_description": "Normalizing the raw gene counts using DESeq2.",
            "input": "Raw count matrix (in tabular format) and experimental design information, including sample groupings. The input requires the DESeq2 package for normalization.",
            "output": "Normalized expression values (in a matrix format) obtained from the raw counts, ready for further analysis, including variance-stabilized counts."
        },
        {
            "task_id": "Part 2-dry-experiment-7",
            "task_description": "Performing batch effect correction using the ComBat function from the sva package.",
            "input": "Normalized expression values (in matrix format) and known batch variables (such as sample processing date or sequencing run) as covariates. The input requires the sva package for correction.",
            "output": "Batch-corrected expression values (in matrix format) that mitigate unwanted variation due to batch effects, enhancing the reliability of downstream analyses."
        }
    ],
    "Part 3": [
        {
            "task_id": "Part 3-dry-experiment-1",
            "task_description": "Load the expression dataset consisting of normalized counts for 80 liposarcoma samples from TCGA and GTEx databases.",
            "input": "Expression dataset containing normalized counts for 80 liposarcoma samples from TCGA (ID: 'TCGA-LPS') and GTEx (ID: 'GTEx-LPS'). The input is a data frame or matrix format with genes as rows and samples as columns, typically in CSV or TXT format.",
            "output": "A loaded data frame or matrix in R containing the normalized counts for the samples, ready for analysis, with dimensions indicating the number of genes and samples."
        },
        {
            "task_id": "Part 3-dry-experiment-2",
            "task_description": "Create a design matrix that incorporates the experimental conditions into the analysis.",
            "input": "Sample information indicating treatment and control groups for the 80 liposarcoma samples. The input is a vector or data frame specifying the group for each sample, where each sample is labeled as either 'treatment' or 'control'.",
            "output": "A design matrix in R that represents the experimental conditions, encoded as a model matrix for use in the linear model fitting process, indicating which samples belong to which experimental group."
        },
        {
            "task_id": "Part 3-dry-experiment-3",
            "task_description": "Apply the linear model to the dataset using the 'lmFit()' function in Limma.",
            "input": "The loaded expression dataset (normalized counts) and the design matrix created from the experimental conditions. The input is a data frame or matrix of counts and a design matrix.",
            "output": "An object representing the fitted linear model, which contains coefficients for each gene, standard errors, t-statistics, and other relevant statistics associated with the experimental conditions."
        },
        {
            "task_id": "Part 3-dry-experiment-4",
            "task_description": "Conduct empirical Bayes moderation using the 'eBayes()' function to stabilize variance estimates.",
            "input": "The fitted linear model object obtained from the 'lmFit()' function. The input is the linear model object that includes the coefficients and variance estimates.",
            "output": "An object containing moderated statistics for each gene, including log2 fold changes, P-values, and adjusted P-values, formatted for further analysis."
        },
        {
            "task_id": "Part 3-dry-experiment-5",
            "task_description": "Extract differentially expressed genes (DEGs) from the analysis output.",
            "input": "The moderated statistics object obtained from the 'eBayes()' function, which includes log2 fold changes and adjusted P-values. The input is the moderated statistics object.",
            "output": "A data frame listing differentially expressed genes (DEGs) along with their corresponding log2 fold changes, adjusted P-values, and significance status based on defined thresholds (adjusted P-value < 0.001 and |log2(fold change)| > 1)."
        },
        {
            "task_id": "Part 3-dry-experiment-6",
            "task_description": "Generate visualizations such as volcano plots and heatmaps to present the DEG results.",
            "input": "The list of DEGs with log2 fold changes and adjusted P-values, along with the original expression dataset. The input includes a data frame of DEGs and the original expression dataset in an appropriate format for plotting.",
            "output": "Visual plots, including a volcano plot highlighting significant DEGs based on thresholds and a heatmap displaying expression levels of DEGs across samples, annotated with gene names and significance levels."
        },
        {
            "task_id": "Part 3-dry-experiment-7",
            "task_description": "Validate DEGs against independent datasets from GEO to ensure reproducibility of findings.",
            "input": "Independent datasets from GEO with dataset IDs: 'GSE202361' and 'GSE205492'. The input includes data frames or matrices of expression data from these datasets, formatted similarly to the original expression dataset.",
            "output": "Results of the validation of DEGs against independent datasets, including overlap analysis, statistical comparisons (e.g., correlation coefficients), and assessments of consistency of expression patterns across datasets."
        }
    ],
    "Part 4": [
        {
            "task_id": "Part 4-dry-experiment-1",
            "task_description": "Conduct Gene Ontology (GO) enrichment analysis on identified differentially expressed genes (DEGs).",
            "input": "A list of DEGs in CSV format that includes gene identifiers (Entrez IDs or Ensembl IDs) and their corresponding log2 fold changes. The background set is specified in 'all_genes.txt' (TXT file containing all genes considered in the differential expression analysis).",
            "output": "GO enrichment analysis results, including significant GO terms with adjusted p-values < 0.05 and a minimum gene count of 2, formatted as a data frame with columns for GO term, adjusted p-value, and gene count."
        },
        {
            "task_id": "Part 4-dry-experiment-2",
            "task_description": "Conduct Kyoto Encyclopedia of Genes and Genomes (KEGG) pathway analysis on the same list of DEGs.",
            "input": "The same list of DEGs used in the GO analysis (CSV format), along with the background set listed in 'all_genes.txt' (TXT file).",
            "output": "KEGG pathway analysis results, including significant pathways with adjusted p-values < 0.05, formatted as a data frame with columns for pathway name, adjusted p-value, and number of DEGs involved."
        },
        {
            "task_id": "Part 4-dry-experiment-3",
            "task_description": "Prepare visualizations to represent the top enriched GO terms and KEGG pathways.",
            "input": "Results from the GO and KEGG analyses, specifically the significant terms and pathways identified, along with parameters for visualization (such as number of terms to display and color schemes).",
            "output": "Visualizations such as bar plots for the top 10 enriched GO terms and dot plots representing the top KEGG pathways, generated using the 'ggplot2' package."
        },
        {
            "task_id": "Part 4-dry-experiment-4",
            "task_description": "Compile findings into a report that includes interpretations and implications for future research or clinical applications.",
            "input": "Results from GO and KEGG analyses, visualizations, and relevant literature on therapeutic targets in liposarcoma. The report should include sections for introduction, methods, results, discussion, and conclusion.",
            "output": "A comprehensive report summarizing the analysis results, interpretations, and potential therapeutic targets, formatted as a written document (e.g., PDF or Word), including references."
        }
    ],
    "Part 5": [
        {
            "task_id": "Part 5-dry-experiment-1",
            "task_description": "Acquire RNA sequencing data from The Cancer Genome Atlas (TCGA) for liposarcoma patients.",
            "input": "Access to the GDC Data Portal (https://portal.gdc.cancer.gov/) and dataset ID GSE202361.",
            "output": "Downloaded RNA sequencing data files in standardized format, preferably in '.bam' or '.fastq' files."
        },
        {
            "task_id": "Part 5-dry-experiment-2",
            "task_description": "Preprocess the acquired RNA sequencing data to extract lncRNA expression levels.",
            "input": "RNA sequencing data files downloaded from TCGA and Ensembl annotations (GRCh38.p13) for lncRNA features.",
            "output": "Quantified lncRNA expression levels in a standardized format (e.g., counts matrix) ready for statistical analysis."
        },
        {
            "task_id": "Part 5-dry-experiment-3",
            "task_description": "Perform statistical analysis to evaluate correlations between the expression levels of identified lncRNAs and immune checkpoint molecules.",
            "input": {
                "lncRNA_expression": "Quantified lncRNA expression levels.",
                "immune_checkpoint_expression": "Expression data for immune checkpoint molecules (format: e.g., counts matrix or data frame)."
            },
            "output": {
                "correlation_matrix": "Matrix showing Pearson correlation coefficients between lncRNAs and immune checkpoint molecules, including p-values for significance (format: e.g., CSV or data frame).",
                "statistical_validation": "Results of Bonferroni correction applied for multiple comparisons."
            }
        },
        {
            "task_id": "Part 5-dry-experiment-4",
            "task_description": "Visualize results using heatmaps to facilitate interpretation of correlations.",
            "input": "Correlation matrix data generated from the statistical analysis.",
            "output": "Heatmap visualizations created using the R package pheatmap, representing the correlations between lncRNA and immune checkpoint expression (output format: image file type such as PNG or PDF)."
        }
    ],
    "Part 6": [
        {
            "task_id": "Part 6-dry-experiment-1",
            "task_description": "Collect clinical data from liposarcoma patients, including overall survival (OS) and progression-free interval (PFI). This data will inform the correlation analysis with gene expression levels.",
            "input": "Patient medical records, clinical trial databases, and patient registries containing clinical outcomes data, including structured data (demographic information, treatment history, follow-up information) and unstructured data (clinician notes). Data types include CSV files, Excel spreadsheets, and SQL database entries.",
            "output": "A standardized dataset containing clinical data for liposarcoma patients, including OS and PFI metrics, formatted as a CSV file with defined column names such as 'Patient_ID', 'Diagnosis_Date', 'Death_Date', 'Progression_Date', 'Treatment_History', etc."
        },
        {
            "task_id": "Part 6-dry-experiment-2",
            "task_description": "Standardize clinical outcome metrics for OS and PFI using specific time frames to ensure consistency in data interpretation.",
            "input": "The dataset collected from patient records, including OS and PFI data, along with definitions from AJCC 8th Edition and NCCN Guidelines. Input data types include a CSV file with clinical outcomes.",
            "output": "A refined dataset with standardized OS and PFI metrics, including clear definitions and time frames (5 years for OS and intervals at 6-month, 1-year, and 2-year marks for PFI), saved as a new CSV file with updated column definitions."
        },
        {
            "task_id": "Part 6-dry-experiment-3",
            "task_description": "Perform statistical analysis to investigate the correlation between gene expression levels of identified DEGs and ICLs with clinical outcomes (OS and PFI).",
            "input": "The standardized clinical dataset and gene expression data for identified DEGs and ICLs, formatted as data frames in R. Input types include CSV files for clinical data and expression matrices.",
            "output": "Kaplan-Meier survival curves and log-rank test results, as well as multivariate Cox proportional hazards regression analysis results. Outputs to include visual plots (e.g., PNG or PDF format) and statistical summary tables in a CSV file format."
        },
        {
            "task_id": "Part 6-dry-experiment-4",
            "task_description": "Utilize R software (version X.X) with specific packages ('survival', 'ggsurvplot') to conduct statistical analyses and visualizations.",
            "input": "R scripts that utilize the 'survival' package for survival analysis and 'ggsurvplot' for visualizations, along with the necessary input datasets in CSV format.",
            "output": "Statistical analysis reports and visual outputs, including survival plots saved in image formats (e.g., PNG, PDF) and analysis summaries in text files detailing the results of the statistical tests performed."
        }
    ]
}