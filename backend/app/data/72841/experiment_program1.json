{
    "Part 1": {
        "Part 1": "Sample Collection and Preparation",
        "step 1": {
            "implementation details": "I. Data Download from Recount3 and TCGA:\n1. Download raw gene counts for tumor and normal tissue samples using the Recount3 R package (version 1.0).\n2. Ensure uniform processing of raw reads from multiple sources (TCGA and GTEx) using STAR (version 2.7.3a) and Megadepth (version 1.0.1) to align and quantify the reads to the UCSC hg38 assembly.\n3. Access and download raw gene counts using the following commands:\n\nR\nlibrary(recount3)\nproject_info <- available_projects()\ndata_sarc <- create_rse(project = 'TCGA-SARC')\ndata_gtex <- create_rse(project = 'GTEx')\n\n4. Verify the integrity of the downloaded data using checksum or md5sum to ensure data integrity.\n5. Handle potential errors during data download and alignment by referring to the Recount3 and STAR documentation for troubleshooting.\n6. Selected data from GTEx tissues include 1293 adipose, 520 fibroblasts, 881 skeletal muscle, 553 esophagus muscularis, 384 stomach, 159 uterus, and 946 vessels. From TCGA, the 206 sarcoma samples include 50 dedifferentiated liposarcomas (DDLPS), 80 leiomyosarcomas, 5 malignant peripheral nerve sheath tumors (MPNST), 17 myxofibrosarcomas (MFS), 10 synovial sarcomas (SS), and 44 undifferentiated pleomorphic sarcoma (UPS).",
            "Reference Source": {
                "ijms-24-14732": {
                    "Part 1": [
                        "step 1"
                    ]
                }
            }
        },
        "step 2": {
            "implementation details": "II. Selection Criteria for Sarcoma and Normal Tissue Samples:\n1. Tumor samples obtained from the SARC project, belonging to the TCGA consortium.\n2. Normal samples downloaded from multiple tissue projects of the GTEx consortium, specifically adipose, uterus, esophagus, stomach, blood vessel, muscle, and skin fibroblasts.\n3. Filter out low-quality and non-primary tumor samples from the sarcoma project based on read alignment statistics (percentage of aligned reads > 70%) and visual inspection of data distribution.\n4. Modify subtype classification according to previous expert pathology reviews.\n5. Adjust sample selection criteria based on the specific research focus on highly differentiated and dedifferentiated liposarcoma.",
            "Reference Source": {
                "ijms-24-14732": {
                    "Part 1": [
                        "step 2"
                    ]
                }
            }
        },
        "step 3": {
            "implementation details": "III. Tissue Dissociation and Cell Isolation from Frozen Tissues, Cell Lines, and Paraffin Sections:\n1. Cut fresh tumor samples into small pieces and dissociate the tissue for 30 minutes at 37°C in a CO2-independent medium containing 150 mg/ml of Liberase TL and 100 U/ml of DNase.\n2. For cell lines, thaw frozen cells and resuspend in the CO2-independent medium with the same concentrations of Liberase TL and DNase.\n3. For paraffin sections, deparaffinize sections using xylene and rehydrate through graded alcohols before dissociation.\n4. Filter the dissociated cells using a 100 µm cell strainer and wash with PBS.\n5. Remove debris by centrifugation (3000 × g for 10 minutes at 4°C) using the debris removal solution.\n6. Resuspend cells in PBS, count, and adjust the concentration to 1 million cells per ml.\n7. Verify cell viability using the Trypan Blue exclusion method and ensure high-quality single-cell suspensions.\n8. Integrate the downloaded data with existing frozen samples, cell lines, and paraffin sections for comprehensive analysis.",
            "Reference Source": {
                "41467_2024_Article_52067": {
                    "Part 1": [
                        "step 2"
                    ]
                }
            }
        },
        "step 4": {
            "implementation details": "IV. Preprocessing of Raw Gene Counts (quality control, filtering):\n1. Keep genomic features mapped to an Entrez ID on the org.Hs.eg.db Bioconductor package (version 3.12.0).\n2. Normalize the downloaded raw counts for all samples using the Trimmed Mean of M-values (TMM) method, as implemented in the edgeR package (version 3.32.1).\n3. Obtain normalized counts in the log scale with the voom function provided in the limma package (version 3.46.0).\n4. Perform quality control checks on the raw gene counts, including visualizing the data distribution, checking for outliers, and ensuring data integrity using specific R packages for data quality assessment (e.g., edgeR, limma).\n5. Handle discrepancies between expected and actual data by re-evaluating the sample selection criteria and preprocessing steps.\n6. Use specific commands for quality control checks, such as plotMDS in edgeR for visualizing data distribution and identify outliers using boxplots or scatter plots.\n7. Verify the accuracy of the normalized counts by comparing with known control samples or reference datasets.",
            "Reference Source": {
                "ijms-24-14732": {
                    "Part 1": [
                        "step 3"
                    ]
                }
            }
        },
        "step 5": {
            "implementation details": "V. Normalization of Gene Counts using TMM method:\n1. Normalize raw gene counts using the TMM method to account for differences in library sizes and composition.\n2. Apply the voom function to transform the normalized counts to log2 counts per million (CPM) and estimate the mean-variance relationship.\n3. Justify the choice of normalization methods, explaining how the TMM method and voom function address potential biases and ensure accurate downstream analysis.\n4. Consider alternative normalization methods (e.g., DESeq2) and provide a rationale for selecting the TMM and voom approaches.\n5. Ensure that the normalization methods preserve the biological information of samples by comparing sample clustering using t-SNE or heatmap.\n6. Make explicit connections between the preprocessing steps and subsequent analysis by detailing how the normalized counts will be used in downstream differential expression analysis and pathway enrichment analysis.",
            "Reference Source": {
                "ijms-24-14732": {
                    "Part 1": [
                        "step 4"
                    ]
                }
            }
        }
    },
    "Part 2": {
        "Part 2": "RNA-Sequencing Data Collection and Preprocessing",
        "step 1": {
            "implementation details": "I. Data Collection from Cancer Cell Line Encyclopedia (CCLE) and other relevant datasets:\n1. Collect RNA-sequencing data from the CCLE database (23Q2 release) ensuring it includes 1,341 cell lines representing 41 major cancer types.\n2. Collect additional RNA-sequencing data from The Cancer Genome Atlas (TCGA), TARGET, and Treehouse databases if needed.\n3. Download RNA-sequencing data from publicly available datasets such as GSE213300, GSE201056, GSE179720, GSE221493, and GSE221492.\n4. Ensure the dataset includes 80 cases of liposarcoma and 10 single-cell sequencing cases.\n5. Provide accession numbers or links to the datasets: CCLE (https://depmap.org/portal/), TCGA (https://www.cancer.gov/about-nci/organization/ccg/research/structural-genomics/tcga), TARGET (https://ocg.cancer.gov/programs/target), Treehouse (https://treehousegenomics.ucsc.edu/), GEO (https://www.ncbi.nlm.nih.gov/geo/).\n6. Organize the downloaded datasets into a structured directory format for easy access and integration.\n7. Merge datasets from different sources, ensuring consistent sample identifiers and metadata alignment.",
            "Reference Source": {
                "nihms-2028845": {
                    "Part 1": [
                        "step 1"
                    ]
                },
                "1-s2.0-S104366182200408X-main": {
                    "Part 1": [
                        "step 1"
                    ]
                }
            }
        },
        "step 2": {
            "implementation details": "II. Quality Control Checks using FastQC:\n1. Perform quality control checks on the raw RNA-sequencing data to ensure data integrity using FastQC (https://www.bioinformatics.babraham.ac.uk/projects/fastqc/).\n2. Check for common quality metrics including per base sequence quality, per sequence GC content, and sequence duplication levels.\n3. Generate a summary report for each dataset and identify any samples that do not meet quality standards.\n4. Interpret FastQC reports to identify issues such as low-quality reads, adapter contamination, and overrepresented sequences.\n5. Handle low-quality samples by either re-sequencing or excluding them from further analysis based on the severity of quality issues.",
            "Reference Source": {
                "nihms-2028845": {
                    "Part 1": [
                        "step 2"
                    ]
                },
                "1-s2.0-S104366182200408X-main": {
                    "Part 1": [
                        "step 2"
                    ]
                }
            }
        },
        "step 3": {
            "implementation details": "III. Removal of Low-Quality Reads with Trimmomatic:\n1. Use Trimmomatic (http://www.usadellab.org/cms/?page=trimmomatic) to remove low-quality reads and sequences with low expression levels.\n2. Apply the following parameter settings: LEADING:3, TRAILING:3, SLIDINGWINDOW:4:15, MINLEN:36.\n3. Generate a summary report of the trimmed reads and ensure that the quality of the remaining reads is satisfactory.\n4. Re-run FastQC on the trimmed reads to confirm the improvement in quality.",
            "Reference Source": {
                "nihms-2028845": {
                    "Part 1": [
                        "step 2"
                    ]
                },
                "1-s2.0-S104366182200408X-main": {
                    "Part 1": [
                        "step 2"
                    ]
                }
            }
        },
        "step 4": {
            "implementation details": "IV. Normalization Techniques using RSEM (TPM, RPKM, FPKM):\n1. Normalize expression levels using RSEM (https://github.com/deweylab/RSEM) to Transcripts Per Million (TPM), Reads Per Kilobase of transcript, per Million mapped reads (RPKM), and Fragments Per Kilobase of transcript per Million mapped reads (FPKM).\n2. Apply log2 transformation (log2(TPM+1)) and z-score normalization for further analysis.\n3. Generate a normalized expression matrix for all samples and ensure the data is ready for downstream analysis.\n4. Validate normalization by checking for uniform distribution of expression levels across samples.",
            "Reference Source": {
                "nihms-2028845": {
                    "Part 1": [
                        "step 2"
                    ]
                },
                "1-s2.0-S104366182200408X-main": {
                    "Part 1": [
                        "step 2"
                    ]
                }
            }
        },
        "step 5": {
            "implementation details": "V. Identification of Metabolic Genes and Pathways from KEGG Database:\n1. Identify 1,620 genes representing 85 different metabolic pathways from the Kyoto Encyclopedia of Genes and Genomes (KEGG) database.\n2. Download and map these genes to the RNA-sequencing data for further analysis.\n3. Ensure the KEGG database is accessed at https://www.genome.jp/kegg/.\n4. Generate a list of metabolic genes and their corresponding expression levels for all samples.\n5. Verify the accuracy of gene mapping by cross-referencing with KEGG pathway annotations.",
            "Reference Source": {
                "nihms-2028845": {
                    "Part 1": [
                        "step 3"
                    ]
                },
                "1-s2.0-S104366182200408X-main": {
                    "Part 1": [
                        "step 3"
                    ]
                }
            }
        }
    },
    "Part 3": {
        "Part 3": "Single-Cell Sequencing Data Collection and Preprocessing",
        "step 1": {
            "implementation details": "I. Data Collection and Sample Preparation:\n① Collect fresh tumor samples from 10 patients undergoing surgery for primary untreated dedifferentiated liposarcoma (DDLPS).\n② For each tumor, identify and separate paired well-differentiated (WD) and dedifferentiated (DD) components during macroscopic examination by pathologists.\n③ Collect additional adipocytic tumors (WDLPS, N=5; lipoma, N=1) and normal adipose tissues (N=5) for comparison.\n④ Process samples immediately after surgery to ensure cell viability.\n⑤ Store samples in cryopreservation media if immediate processing is not possible.",
            "Reference Source": {
                "41467_2024_Article_52067": {
                    "Part 1": [
                        "step 1"
                    ]
                }
            }
        },
        "step 2": {
            "implementation details": "II. Tissue Dissociation and Cell Isolation:\n① Cut fresh tumor samples into small pieces.\n② Dissociate the tissue for 30 minutes at 37°C in a CO2-independent medium containing 150 mg/ml of Liberase TL and 100 U/ml of DNase.\n③ Filter the dissociated cells using a 100 µm cell strainer and wash with PBS.\n④ Remove debris by centrifugation (3000 × g for 10 minutes at 4°C) using the debris removal solution.\n⑤ Resuspend cells in PBS, count, and adjust the concentration to 1 million cells per ml.\n⑥ Load 6000 cells per sample onto a 10X Genomics Chromium Controller using the following settings: GEM generation and barcoding: 10 cycles at 53°C, 5 cycles at 65°C; Post GEM-RT cleanup: 2 cycles at 45°C; cDNA amplification: 12 cycles at 98°C.\n⑦ Prepare libraries using the Single Cell 3' Reagent Kit (NextGem kit, 10X Genomics) according to the manufacturer's protocol.",
            "Reference Source": {
                "41467_2024_Article_52067": {
                    "Part 1": [
                        "step 2",
                        "step 3"
                    ]
                }
            }
        },
        "step 3": {
            "implementation details": "III. Quality Control of Single-Cell Suspensions:\n① Perform quality control using DoubletFinder with the following parameters: pN = 0.25, pK = 0.09, nExp = 500.\n② Remove doublets using DoubletFinder, scDblFinder, and scds with default parameters.\n③ Assess cell viability using the Trypan Blue exclusion method: stain cells with 0.4% Trypan Blue solution and count viable cells using a hemocytometer.\n④ Ensure that cell viability is above 85% before proceeding with sequencing.",
            "Reference Source": {
                "41467_2024_Article_52067": {
                    "Part 1": [
                        "step 4"
                    ]
                }
            }
        },
        "step 4": {
            "implementation details": "IV. Single-cell RNA Sequencing (scRNA-seq) Analysis:\n① Use CellRanger (v6.0.0, 10x Genomics) with the following parameters for read alignment: --expect-cells=3000, --localcores=16, --localmem=64.\n② Generate feature-barcode matrices using default settings in CellRanger.\n③ Exclude cells with mitochondrial gene expression exceeding 15% or an abnormal number of expressed genes (≤200 or ≥9,000).\n④ Normalize and scale data using Seurat's SCTransform function.",
            "Reference Source": {
                "41467_2024_Article_52067": {
                    "Part 1": [
                        "step 5"
                    ]
                },
                "cancers-15-03360": {
                    "Part 1": [
                        "step 1"
                    ]
                }
            }
        },
        "step 5": {
            "implementation details": "V. Integration and Clustering of scRNA-seq Data:\n① Integrate all samples using Harmony (v0.1.0) with the following parameters: theta=2, lambda=1, nclust=50.\n② Perform PCA on the 3000 most variable genes identified by SCTransform.\n③ Calculate UMAP dimensions on the first 50 PCA components using default settings in Seurat.\n④ Perform shared nearest-neighbors and Louvain clustering using Seurat's FindNeighbors and FindClusters functions with the following parameters: resolution=0.8, k.param=20.",
            "Reference Source": {
                "41467_2024_Article_52067": {
                    "Part 1": [
                        "step 6"
                    ]
                }
            }
        }
    },
    "Part 4": {
        "Part 4": "Differential Expression Analysis",
        "step 1": {
            "implementation details": "I. Differential Comparison of Sarcoma Subtypes and Normal Tissues using limma\n1. Data Normalization: Normalize RNA-seq data using the Trimmed Mean of M-values (TMM) method as implemented in the edgeR package (version 3.32.1). Specify the scaling factors and assumptions for non-differentially expressed genes. Use datasets GSE213300, GSE201056, GSE179720, GSE221493, and GSE221492 for normalization.\n2. Data Preprocessing: Preprocess the data by filtering out low-quality and non-primary tumor samples from the sarcoma project. Use criteria such as minimum read counts (>10), quality scores (Phred score >30), and only keep genomic features mapped to an Entrez ID on the org.Hs.eg.db Bioconductor package (version 3.12.0). Example command: `filtered_data <- filterByExpr(expression_data, min.count=10, min.total.count=15)`.\n3. Linear Model Fitting: Fit a linear model to the normalized data using the limma package (version 3.46.0). Use the design matrix to include sarcoma subtypes and normal tissues. Example command: `fit <- lmFit(expression_data, design)`.\n4. Batch Effect Correction: Include tissue source site as a batch effect in the model matrix to correct for batch effects. Example command: `batch_corrected <- removeBatchEffect(expression_data, batch=batch)`.\n5. Differential Expression Analysis: Identify differentially expressed genes (DEGs) and differentially activated circuits between sarcoma subtypes and normal tissues using the empirical Bayes method. Set p-value thresholds at <0.05 and adjust for false discovery rate (FDR) using the Benjamini-Hochberg method. Example command: `deg <- topTable(fit, adjust.method='BH', number=Inf)`.\n6. Validation Methods: Validate results by cross-referencing with other datasets or using additional statistical tests to confirm findings. Ensure reproducibility by performing the analysis on different subsets of data. Cross-reference findings with existing knowledge to ensure accuracy. Example validation step: Compare DEGs with those identified in previous studies or publicly available datasets.",
            "Reference Source": {
                "ijms-24-14732": {
                    "Part 5": [
                        "step 1"
                    ]
                },
                "cancers-15-03360": {
                    "Part 1": [
                        "step 2",
                        "step 3",
                        "step 4"
                    ]
                }
            }
        },
        "step 2": {
            "implementation details": "II. Functional Annotation of Differentially Activated Circuits (GO enrichment analysis)\n1. Gene Ontology Enrichment Analysis: Perform GO enrichment analysis on the effector genes of differentially activated circuits using the enrichR package (version 3.0). Use datasets GSE213300, GSE201056, GSE179720, GSE221493, and GSE221492 for gene lists. Example command: `go_results <- enrichGO(gene_list, OrgDb='org.Hs.eg.db', ont='BP', pvalueCutoff=0.05, qvalueCutoff=0.05)`.\n2. Biological Process Ontology: Focus on the biological process ontology to identify enriched terms related to cellular functions and processes. Use the 2021 version of the ontology.\n3. Validation Methods: Validate the enrichment results by comparing them with known biological processes and pathways from relevant databases and literature. Cross-reference findings with existing knowledge to ensure accuracy.",
            "Reference Source": {
                "ijms-24-14732": {
                    "Part 5": [
                        "step 2"
                    ]
                }
            }
        },
        "step 3": {
            "implementation details": "III. Visualization of Differential Signaling Results\n1. t-SNE Visualization: Use the t-distributed stochastic neighbor embedding (t-SNE) method to visualize the structure of high-dimensional data, including normalized counts and activity values. Use the Rtsne package (version 0.15) with parameters: perplexity = 30, learning rate = 200. Apply this to datasets GSE213300, GSE201056, GSE179720, GSE221493, and GSE221492. Example command: `tsne_results <- Rtsne(normalized_data, perplexity=30, learning_rate=200)`.\n2. Heatmap Visualization: Create heatmaps using the pheatmap package (version 1.0.12) to visualize sample clustering based on differential signaling results. Use the complete clustering method and specify distance measures: euclidean for features and correlation for samples. Example command: `pheatmap(expression_data, clustering_distance_rows='euclidean', clustering_distance_cols='correlation')`.\n3. Validation Methods: Validate the visualization results by ensuring consistency with known patterns and expected clustering based on biological knowledge. Cross-reference with other visualizations and literature.",
            "Reference Source": {
                "ijms-24-14732": {
                    "Part 5": [
                        "step 3"
                    ]
                }
            }
        },
        "step 4": {
            "implementation details": "IV. Analysis of Common and Unique Dysregulated Circuits in Sarcoma Subtypes\n1. Identification of Common Dysregulated Circuits: Identify circuits that show significant differential activation across all sarcoma subtypes using datasets GSE213300, GSE201056, GSE179720, GSE221493, and GSE221492. Apply statistical tests with p-value thresholds at <0.05 and adjust for FDR. Example command: `common_circuits <- identifyCircuits(data, method='common', pvalueCutoff=0.05, adjust.method='BH')`.\n2. Identification of Unique Dysregulated Circuits: Identify circuits uniquely dysregulated in specific sarcoma subtypes using the same datasets. Apply statistical tests with p-value thresholds at <0.05 and adjust for FDR. Example command: `unique_circuits <- identifyCircuits(data, method='unique', pvalueCutoff=0.05, adjust.method='BH')`.\n3. Functional Annotation: Annotate the functions of common and unique dysregulated circuits using relevant databases and literature. Provide detailed descriptions of the biological significance of these circuits. Example command: `annotateCircuits(circuits, databases='KEGG, Reactome')`.\n4. Validation Methods: Validate the identified circuits by cross-referencing with known pathways and biological processes from relevant databases and literature. Ensure robustness and reproducibility by comparing findings with independent datasets.",
            "Reference Source": {
                "ijms-24-14732": {
                    "Part 5": [
                        "step 4"
                    ]
                }
            }
        }
    },
    "Part 5": {
        "Part 5": "Pathway Enrichment Analysis",
        "step 1": {
            "implementation details": "I. Identification of Metabolic Genes and Pathways from KEGG Database\n1. Access the KEGG database at https://www.genome.jp/kegg/ and download the list of metabolic genes and pathways.\n2. Identify 1,620 genes representing 85 different metabolic pathways from the KEGG database.\n3. Map these genes to the RNA-sequencing data collected from the following datasets: GSE213300 (RNA-seq data from liposarcoma tumors and models), GSE201056 (RNA-seq data from WD-LPS and DD-LPS patient samples), GSE179720 (RNA-seq data from myxoid liposarcoma), GSE221493 (scRNA-seq data from primary DDLPS tumors), and GSE221492 (RNA-seq data from primary DDLPS tumors).\n4. Use software tools like STAR for aligning RNA-seq reads to the reference genome and featureCounts for quantifying gene expression levels. For STAR, use parameters --runThreadN 8 --outSAMtype BAM SortedByCoordinate --quantMode GeneCounts. For featureCounts, use parameters -T 8 -t exon -g gene_id -a annotation.gtf -o counts.txt.\n5. Ensure that the gene lists are accurately mapped to the RNA-sequencing data for further analysis.",
            "Reference Source": {
                "1-s2.0-S104366182200408X-main": {
                    "Part 1": [
                        "step 1",
                        "step 2",
                        "step 3"
                    ]
                },
                "nihms-2028845": {
                    "Part 1": [
                        "step 1",
                        "step 2",
                        "step 3"
                    ]
                }
            }
        },
        "step 2": {
            "implementation details": "II. Calculation of Pathway Activity Scores across Different Cancer Types\n1. Calculate the mean expression level (Ei,j) for each of the 1,620 metabolic genes across cell lines within each cancer type using the normalized RNA-sequencing data.\n2. Calculate the relative gene expression level (ri,j) as the ratio of Ei,j to its average over all cancer types.\n3. Calculate the pathway activity score (pt,j) for each metabolic pathway and cancer type as the weighted average of ri,j over all genes included in the pathway.\n4. Use the following datasets for the calculation: GSE213300, GSE201056, GSE179720, GSE221493, and GSE221492.\n5. Use software tools like R and Bioconductor packages (edgeR, limma) for these calculations. For edgeR, use functions like calcNormFactors and estimateDisp. For limma, use functions like voom and lmFit.\n6. Ensure that the pathway activity scores are accurately calculated for each cancer type and are ready for further analysis.",
            "Reference Source": {
                "nihms-2028845": {
                    "Part 1": [
                        "step 6"
                    ]
                }
            }
        },
        "step 3": {
            "implementation details": "III. Functional Enrichment Analysis using KEGG Pathways\n1. Perform functional enrichment analysis using the calculated pathway activity scores to identify metabolic pathways that are differentially regulated between highly differentiated and dedifferentiated liposarcoma.\n2. Use the KEGG database to identify enriched pathways and determine their significance using statistical tests such as Fisher's exact test or hypergeometric test.\n3. Visualize the enrichment results using bar plots or heatmaps to highlight the differentially regulated pathways.\n4. Use the following datasets for the analysis: GSE213300, GSE201056, GSE179720, GSE221493, and GSE221492.\n5. Use software tools like ClusterProfiler and ggplot2 in R for enrichment analysis and visualization. For ClusterProfiler, use functions like enrichKEGG and dotplot. For ggplot2, use functions like ggplot and geom_bar.\n6. Ensure that the enriched pathways are accurately identified and visualized for further interpretation.",
            "Reference Source": {
                "1-s2.0-S104366182200408X-main": {
                    "Part 1": [
                        "step 5",
                        "step 6",
                        "step 7"
                    ]
                }
            }
        },
        "step 4": {
            "implementation details": "IV. Gene Set Enrichment Analysis (GSEA) for Metabolic Pathways\n1. Perform Gene Set Enrichment Analysis (GSEA) using the normalized RNA-sequencing data to identify metabolic pathways that are differentially regulated between highly differentiated and dedifferentiated liposarcoma.\n2. Use the KEGG metabolic gene sets for the GSEA analysis.\n3. Calculate enrichment scores and determine the significance of the identified pathways using statistical methods such as permutation tests.\n4. Visualize the GSEA results using enrichment plots and heatmaps to highlight the differentially regulated pathways.\n5. Use the following datasets for the analysis: GSE213300, GSE201056, GSE179720, GSE221493, and GSE221492.\n6. Use software tools like the GSEA software from the Broad Institute and R packages like fgsea for the analysis. For GSEA software, use parameters like -nperm 1000. For fgsea, use functions like fgsea and plotEnrichment.\n7. Ensure that the GSEA results are accurately interpreted and visualized for further insights into the metabolic differences between highly differentiated and dedifferentiated liposarcoma.",
            "Reference Source": {
                "nihms-2028845": {
                    "Part 1": [
                        "step 6",
                        "step 7"
                    ]
                }
            }
        }
    },
    "Part 6": {
        "Part 6": "Integration of Bulk RNA-Seq and Single-Cell Sequencing Data",
        "step 1": {
            "implementation details": "I. Identification of Tumor Cell Clusters\n1. Acquire single-cell RNA sequencing data from GSE221493 and GSE221492 datasets, which include primary DDLPS, WDLPS, liposarcoma, and peritumoral fat tissue samples.\n2. Preprocess the single-cell RNA sequencing data using the Seurat package (version 4.1.0). Perform quality control steps to filter out low-quality cells, including cells with fewer than 200 genes, cells with more than 20% mitochondrial genes, and predicted doublets using DoubletFinder (version 2.0.3).\n3. Normalize the data using the SCTransform function in Seurat to account for technical variations.\n4. Perform principal component analysis (PCA) on the 3000 most variable genes to reduce dimensionality.\n5. Use Uniform Manifold Approximation and Projection (UMAP) to visualize the data in two dimensions.\n6. Cluster the cells using the FindNeighbors and FindClusters functions in Seurat with resolutions 0.4, 0.6, and 0.8 to identify distinct tumor cell clusters.\n7. Annotate the clusters based on marker gene expression using the FindAllMarkers function with a Wilcoxon rank sum test and Bonferroni correction.\n8. Ensure all software tools are up-to-date and compatible. Verify that the datasets mentioned are publicly accessible and contain the necessary data for the analysis.",
            "Reference Source": {
                "cancers-15-03360": {
                    "Part 3": [
                        "step 1",
                        "step 2",
                        "step 3"
                    ]
                },
                "41467_2024_Article_52067": {
                    "Part 3": [
                        "step 1"
                    ]
                }
            }
        },
        "step 2": {
            "implementation details": "II. Gene Expression and Pathway Analysis\n1. Acquire gene expression profiles from bulk RNA-seq data using the GSE213300, GSE201056, GSE179720, GSE221493, and GSE221492 datasets.\n2. Normalize the bulk RNA-seq data using the TMM method from the edgeR package and transform to log2 counts per million (CPM).\n3. Integrate single-cell RNA-seq data with bulk RNA-seq data using the Seurat package. Use the FindIntegrationAnchors function to identify anchors between the datasets and IntegrateData to combine them.\n4. Perform differential gene expression analysis between tumor cell clusters using the FindMarkers function in Seurat with a log2-fold change threshold of 0.4 and adjusted p-value cutoff of 0.05.\n5. Conduct pathway enrichment analysis using the ClusterProfiler package in R. Identify enriched pathways using KEGG and MSigDB databases and visualize results with bar plots and dot plots.\n6. Explain the rationale for choosing specific datasets and tools. Highlight how the identified tumor cell clusters will contribute to the overall research objective.",
            "Reference Source": {
                "cancers-15-03360": {
                    "Part 3": [
                        "step 1",
                        "step 2",
                        "step 3"
                    ]
                },
                "41467_2024_Article_52067": {
                    "Part 3": [
                        "step 2"
                    ]
                }
            }
        },
        "step 3": {
            "implementation details": "III. Distribution of Tumor Cell Clusters in WD and DD Components\n1. Analyze the proportion of tumor cells from WD and DD components within each identified cell cluster using the propeller package in R (version 1.0.0). Set specific thresholds for chi-squared tests and apply FDR correction for multiple comparisons.\n2. Perform chi-squared tests to assess the significance of differences in proportions, adjusting p-values for multiple comparisons using FDR correction.\n3. Visualize the distribution of cell clusters in WD and DD components using bar plots and pie charts.\n4. Suggest alternative datasets or tools that could be used if the primary choices are not available.",
            "Reference Source": {
                "cancers-15-03360": {
                    "Part 3": [
                        "step 1",
                        "step 2"
                    ]
                },
                "41467_2024_Article_52067": {
                    "Part 3": [
                        "step 3"
                    ]
                }
            }
        },
        "step 4": {
            "implementation details": "IV. Differential Gene Expression Between WD and DD Tumor Cells\n1. Perform differential gene expression analysis between WD and DD tumor cells using the FindMarkers function in Seurat with default parameters.\n2. Select differentially expressed genes with a log2-fold change threshold of 0.4 and an adjusted p-value cutoff of 0.05.\n3. Conduct functional annotation of differentially expressed genes using the Toppfun tool, focusing on pathways and gene ontologies.\n4. Visualize the results using heatmaps and volcano plots.\n5. Provide guidance on adapting the protocol for different types of single-cell RNA sequencing data.",
            "Reference Source": {
                "cancers-15-03360": {
                    "Part 3": [
                        "step 1",
                        "step 2"
                    ]
                },
                "41467_2024_Article_52067": {
                    "Part 3": [
                        "step 4"
                    ]
                }
            }
        },
        "step 5": {
            "implementation details": "V. Pathway Enrichment Analysis\n1. Perform pathway enrichment analysis on differentially expressed genes using the ClusterProfiler package in R (version 3.14.3).\n2. Identify enriched pathways using KEGG and MSigDB databases.\n3. Apply a significance threshold of FDR < 0.05 for the analysis.\n4. Visualize the results using bar plots and dot plots.\n5. Add subheadings or numbered steps within each major step to improve readability and clarity.",
            "Reference Source": {
                "cancers-15-03360": {
                    "Part 3": [
                        "step 4"
                    ]
                },
                "41467_2024_Article_52067": {
                    "Part 3": [
                        "step 5"
                    ]
                }
            }
        },
        "step 6": {
            "implementation details": "VI. Validation Using Bulk RNA-seq\n1. Validate the gene expression signatures identified by single-cell RNA-seq using bulk RNA-seq data from GSE213300, GSE201056, GSE179720, GSE221493, and GSE221492 datasets.\n2. Perform hierarchical clustering on the bulk RNA-seq data using the hclust function in R with the ward.D2 method.\n3. Compare the expression levels of identified genes across different tumor types to assess consistency between bulk and single-cell RNA-seq data.\n4. Clearly state the purpose and expected outcome of each step.",
            "Reference Source": {
                "41467_2024_Article_52067": {
                    "Part 3": [
                        "step 6"
                    ]
                }
            }
        },
        "step 7": {
            "implementation details": "VII. Integration of Results from Differential Expression and Pathway Enrichment Analyses with Single-Cell Data\n1. Combine the results of differential expression and pathway enrichment analyses from bulk RNA-seq data with single-cell RNA-seq data.\n2. Use the Seurat package to integrate the datasets and perform joint clustering and visualization.\n3. Identify common and unique dysregulated pathways in highly differentiated and dedifferentiated liposarcoma.\n4. Visualize the integrated results using UMAP plots, heatmaps, and pathway enrichment plots.\n5. Ensure all steps are logically coherent and follow a clear sequence.",
            "Reference Source": {
                "cancers-15-03360": {
                    "Part 3": [
                        "step 1",
                        "step 2",
                        "step 4"
                    ]
                },
                "41467_2024_Article_52067": {
                    "Part 3": [
                        "step 7"
                    ]
                }
            }
        }
    }
}