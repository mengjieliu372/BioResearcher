{
    "Part 1": [
        {
            "task_id": "Part 1-dry-experiment-1",
            "task_description": "Gather comprehensive patient demographics and clinical outcomes by administering a standardized questionnaire and reviewing medical records.",
            "input": "Patient demographics and clinical data including age (numerical, integer), gender (categorical, string), tumor stage (categorical, string), tumor grade (categorical, string), treatment history (categorical, string), and outcomes such as recurrence (boolean) and survival (numerical, integer). Data will be collected in a standardized format, such as a CSV file.",
            "output": "Anonymized dataset of patient demographics and clinical outcomes, structured as a database (e.g., SQL format) or a spreadsheet (e.g., Excel) with clearly defined columns representing each data type and ensuring patient confidentiality."
        },
        {
            "task_id": "Part 1-dry-experiment-2",
            "task_description": "Store collected data securely in a database designed for clinical studies.",
            "input": "Anonymized patient data collected from questionnaires and medical records, formatted for database entry (e.g., SQL schema). Data may include patient identifiers, demographics, clinical outcomes, and treatment history.",
            "output": "Securely stored database containing patient demographics and clinical outcomes, ensuring compliance with data protection regulations. The database should be structured to allow for easy retrieval and analysis of patient information."
        },
        {
            "task_id": "Part 1-dry-experiment-3",
            "task_description": "Correlate clinical data with molecular findings to assess relationships that may inform treatment outcomes.",
            "input": "Anonymized patient data (demographics and clinical outcomes) and molecular data obtained from subsequent wet-lab experiments, formatted for statistical analysis (e.g., CSV files or data frames). The input will include variables related to demographics, clinical outcomes (recurrence and survival), and molecular markers.",
            "output": "Analysis report detailing correlations between clinical outcomes and molecular findings, structured in a comprehensive format such as tables or graphs. The report will include statistical metrics (e.g., p-values, correlation coefficients) to summarize the findings and highlight significant relationships."
        }
    ],
    "Part 2": [
        {
            "task_id": "Part 2-dry-experiment-1",
            "task_description": "Quality control of extracted RNA using the Agilent 2100 Bioanalyzer to assess RNA integrity.",
            "input": "RNA samples analyzed using the RNA 6000 Nano Chip, which provides a profile of RNA integrity number (RIN) values.",
            "output": "RIN values of RNA samples, with acceptable samples having RIN values greater than 7.0, indicating good RNA quality."
        },
        {
            "task_id": "Part 2-dry-experiment-2",
            "task_description": "Measurement of RNA concentration using a NanoDrop spectrophotometer to determine total RNA yield.",
            "input": "Extracted RNA samples (in RNase-free water) measured at a wavelength of 260 nm to assess concentration.",
            "output": "Concentration values of RNA samples in ng/ÂµL, which will be used to ensure adequate amounts for library preparation."
        },
        {
            "task_id": "Part 2-dry-experiment-3",
            "task_description": "Quality control of RNA libraries using the Agilent 2100 Bioanalyzer to ensure proper fragment sizes.",
            "input": "Prepared RNA libraries analyzed to confirm that fragment sizes are within the range of 200-600 bp.",
            "output": "Quality metrics of RNA libraries, including size distribution data and average fragment length, which indicate readiness for sequencing."
        },
        {
            "task_id": "Part 2-dry-experiment-4",
            "task_description": "Sequencing of RNA libraries on an Illumina NovaSeq 6000 platform to generate sequencing data.",
            "input": "Prepared RNA libraries aiming for a sequencing depth of 20 million reads per sample, formatted as indexed libraries.",
            "output": "Raw sequencing data files in FASTQ format containing nucleotide sequences and quality scores for downstream analysis."
        },
        {
            "task_id": "Part 2-dry-experiment-5",
            "task_description": "Computational analysis of RNA sequencing data to extract biological insights.",
            "input": "Raw sequencing data files in FASTQ format generated from the sequencing step, alongside associated metadata.",
            "output": "Processed RNA sequencing data, including gene expression levels, variant calls, and differential expression results in appropriate formats (e.g., CSV, text files)."
        },
        {
            "task_id": "Part 2-dry-experiment-6",
            "task_description": "Data alignment of RNA sequencing reads to a reference genome to facilitate analysis.",
            "input": "Raw sequencing data in FASTQ format, along with the reference genome sequence.",
            "output": "Aligned sequencing data in BAM format, which indicates the positions of reads mapped to the reference genome."
        },
        {
            "task_id": "Part 2-dry-experiment-7",
            "task_description": "Normalization of gene expression data to correct for technical variations between samples.",
            "input": "Raw expression counts from aligned data, including metadata for each sample.",
            "output": "Normalized gene expression matrix, facilitating comparative analysis between samples."
        }
    ],
    "Part 3": [
        {
            "task_id": "Part 3-dry-experiment-1",
            "task_description": "Process the raw sequencing data using Illumina's base calling software to generate FASTQ files, enabling subsequent analysis of sequencing quality.",
            "input": "Raw sequencing data from the Illumina NovaSeq 6000 platform, typically in BCL format, which contains the base calls and quality scores.",
            "output": "FASTQ files containing sequenced reads and their corresponding quality scores, formatted for downstream analysis."
        },
        {
            "task_id": "Part 3-dry-experiment-2",
            "task_description": "Conduct a secondary quality check using FastQC to assess read quality and alignment statistics, ensuring that the sequencing data meets quality standards prior to alignment.",
            "input": "FASTQ files generated from the sequencing process, which include raw sequence data and quality scores.",
            "output": "FastQC reports containing quality metrics of the sequencing reads, including per base sequence quality, per sequence quality scores, and other alignment statistics, helping to identify any issues in the sequencing data."
        },
        {
            "task_id": "Part 3-dry-experiment-3",
            "task_description": "Align the FASTQ files to the reference human genome (hg38) using the Burrows-Wheeler Aligner (BWA) to prepare data for variant calling.",
            "input": "FASTQ files with sequenced reads and the reference human genome (hg38) in FASTA format, which serves as the target for alignment.",
            "output": "BAM files containing the aligned reads to the reference genome, including information on read mapping, read group information, and duplicate marking using Picard tools."
        },
        {
            "task_id": "Part 3-dry-experiment-4",
            "task_description": "Call variants using the Genome Analysis Toolkit (GATK) best practices pipeline, specifically by employing the HaplotypeCaller to identify somatic mutations.",
            "input": "BAM files generated from the alignment step and reference genome (hg38) in FASTA format, which are necessary for variant calling.",
            "output": "VCF files containing called variants, including information on potential somatic mutations detected in the tumor samples, formatted for further analysis."
        },
        {
            "task_id": "Part 3-dry-experiment-5",
            "task_description": "Filter the called variants to include only high-quality single nucleotide variants (SNVs) and insertions/deletions (indels) using GATK's VariantFiltration tool.",
            "input": "VCF files generated from the variant calling step, which contain all detected variants regardless of quality.",
            "output": "Filtered VCF files containing only high-quality variants based on specified criteria, including a quality score filter of at least 30 and a minimum depth of 20, ensuring that only reliable variants are retained."
        },
        {
            "task_id": "Part 3-dry-experiment-6",
            "task_description": "Annotate the filtered variants with tools like ANNOVAR or VEP to characterize their potential functional impact and determine allele frequencies, aiding in clinical interpretation.",
            "input": "Filtered VCF files containing high-quality variants, which are ready for functional annotation.",
            "output": "Annotated VCF files or reports detailing the functional impact of each variant, allele frequencies, and relevant clinical information, facilitating integration with clinical data for prognostic assessment."
        }
    ],
    "Part 4": [
        {
            "task_id": "Part 4-dry-experiment-1",
            "task_description": "Identify differentially expressed genes (DEGs) from RNA sequencing data using the DESeq2 package to understand the molecular differences between dedifferentiated and well-differentiated liposarcoma.",
            "input": "RNA sequencing count data from dataset GSE247026 in a tab-delimited format, containing columns for gene names, sample identifiers, and corresponding raw counts for each sample.",
            "output": "A table of DEGs with associated p-values, log2 fold changes, and adjusted p-values, formatted as a data frame or CSV file, filtered for significance (adjusted p-value < 0.05) and fold change criteria (log2 fold change > 1 for up-regulated and < -1 for down-regulated genes)."
        },
        {
            "task_id": "Part 4-dry-experiment-2",
            "task_description": "Perform Gene Ontology (GO) and Kyoto Encyclopedia of Genes and Genomes (KEGG) enrichment analyses using the clusterProfiler R package to identify biological processes and pathways relevant to liposarcoma.",
            "input": "List of significant DEGs identified in the previous step, formatted as a character vector of gene identifiers.",
            "output": "Results of GO and KEGG enrichment analyses, including enriched GO terms and KEGG pathways, presented as data frames and visualized using dotplot() and barplot() functions to highlight the top enriched terms and pathways."
        },
        {
            "task_id": "Part 4-dry-experiment-3",
            "task_description": "Conduct Gene Set Enrichment Analysis (GSEA) to integrate findings with lipidomic data from dataset GSE221494, focusing on lipid metabolism pathways and their relevance to liposarcoma.",
            "input": "Ranked list of DEGs based on log2 fold change values from the DEG analysis, formatted as a numeric vector, along with gene sets related to lipid metabolism, typically provided in GMT format.",
            "output": "Enrichment scores (ES) and normalized enrichment scores (NES) for each gene set, focusing on those with a false discovery rate (FDR) < 0.25, presented in a detailed report or data frame that outlines the significance of each gene set, including visualizations of the enrichment results."
        }
    ],
    "Part 5": [
        {
            "task_id": "Part 5-dry-experiment-1",
            "task_description": "Download RNA sequencing data from GSE247026 and GSE243759 for analysis of gene expression levels.",
            "input": "RNA sequencing datasets from GEO (Gene Expression Omnibus) database, specifically GSE247026 and GSE243759. These datasets should be in a format containing gene expression levels and group information.",
            "output": "Formatted data frames for each dataset containing columns such as 'gene_expression' and 'group', ready for statistical analysis."
        },
        {
            "task_id": "Part 5-dry-experiment-2",
            "task_description": "Check for missing data in the downloaded RNA sequencing datasets and apply appropriate imputation methods if necessary.",
            "input": "Data frames obtained from the RNA sequencing datasets which may contain missing values.",
            "output": "Cleaned data frames with imputed values for missing data, ensuring that each dataset is complete for statistical analysis. Imputation methods may include mean imputation or k-nearest neighbors."
        },
        {
            "task_id": "Part 5-dry-experiment-3",
            "task_description": "Perform unpaired t-tests using R software to compare gene expression levels between WDL and DDL samples, checking for normality and equal variance prior to the test.",
            "input": "Cleaned data frames with gene expression levels and group classifications, ensuring they meet assumptions of normality and equal variance.",
            "output": "Statistical results from the t-tests, including t-statistics, p-values, and indications of significance, formatted in tables for reporting."
        },
        {
            "task_id": "Part 5-dry-experiment-4",
            "task_description": "Conduct Cox regression analysis using the 'survival' package in R to assess the relationship between gene expression levels and clinical outcomes, while controlling for covariates such as age, sex, and tumor stage.",
            "input": "Clinical data from the patient cohort, including 'time_to_event', 'event_status', 'age', 'sex', and 'tumor_stage'.",
            "output": "Cox regression analysis results, including hazard ratios and their 95% confidence intervals, formatted in tables for interpretation. The model will account for potential confounders."
        },
        {
            "task_id": "Part 5-dry-experiment-5",
            "task_description": "Apply the Benjamini-Hochberg method for correcting for multiple comparisons in the context of differential expression analyses.",
            "input": "P-values obtained from the differential expression analyses performed on the RNA sequencing data.",
            "output": "Adjusted p-values for each test, indicating significance after correction for multiple comparisons, formatted in tables for reporting."
        },
        {
            "task_id": "Part 5-dry-experiment-6",
            "task_description": "Normalize and transform RNA sequencing data to ensure comparability across samples before further analysis.",
            "input": "Raw RNA sequencing data frames, which may have varying scales and distributions.",
            "output": "Normalized data frames that will be used for differential expression analysis, formatted to ensure consistency across all samples."
        }
    ]
}