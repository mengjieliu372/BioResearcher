{
    "Part 1": [
        {
            "task_id": "Part 1-dry-experiment-1",
            "task_description": "Download raw gene counts for tumor and normal tissue samples using the Recount3 R package. This step is essential for obtaining the foundational data required for subsequent analysis.",
            "input": "Project identifiers for TCGA-SARC and GTEx; R environment with Recount3 package (version 1.0) installed.",
            "output": "Raw gene counts data files for tumor and normal tissue samples; data type is RangedSummarizedExperiment objects, typically in RData format."
        },
        {
            "task_id": "Part 1-dry-experiment-2",
            "task_description": "Align and quantify reads to the UCSC hg38 assembly using STAR (version 2.7.3a) and Megadepth (version 1.0.1). This step ensures accurate mapping of reads to the reference genome, which is crucial for reliable quantification.",
            "input": "Raw reads from multiple sources (TCGA and GTEx) in FASTQ format; STAR and Megadepth software; UCSC hg38 genome assembly in FASTA format.",
            "output": "Aligned and quantified read data; data type is genomic alignment files (e.g., BAM files)."
        },
        {
            "task_id": "Part 1-dry-experiment-3",
            "task_description": "Verify the integrity of downloaded data using checksum or md5sum to ensure data accuracy and prevent errors in downstream analysis.",
            "input": "Downloaded data files in various formats (e.g., CSV, RData); checksum or md5sum values for verification.",
            "output": "Verification status of data integrity; data type is boolean or status report indicating whether data integrity is maintained."
        },
        {
            "task_id": "Part 1-dry-experiment-4",
            "task_description": "Filter out low-quality and non-primary tumor samples based on read alignment statistics. This step is critical for maintaining data quality and ensuring that analyses are performed on reliable datasets.",
            "input": "Read alignment statistics; threshold for percentage of aligned reads (>70%).",
            "output": "Filtered dataset with only high-quality primary tumor samples; data type is RangedSummarizedExperiment objects."
        },
        {
            "task_id": "Part 1-dry-experiment-5",
            "task_description": "Normalize the downloaded raw counts using the Trimmed Mean of M-values (TMM) method. This normalization accounts for differences in library sizes and composition, facilitating accurate comparison across samples.",
            "input": "Raw gene counts in matrix format; edgeR package (version 3.32.1) in R.",
            "output": "Normalized gene counts; data type is matrix of normalized counts, typically in a tabular format."
        },
        {
            "task_id": "Part 1-dry-experiment-6",
            "task_description": "Transform normalized counts to log2 counts per million (CPM) using the voom function to stabilize variance across the range of expression values, enhancing the reliability of downstream analyses.",
            "input": "Normalized gene counts in matrix format; limma package (version 3.46.0) in R.",
            "output": "Log2 CPM transformed counts; data type is matrix of log2 CPM values, suitable for differential expression analysis."
        },
        {
            "task_id": "Part 1-dry-experiment-7",
            "task_description": "Perform quality control checks on the raw gene counts to identify and address any data anomalies, ensuring the integrity of subsequent analyses.",
            "input": "Raw gene counts in matrix format; edgeR and limma packages in R.",
            "output": "Quality control report including visualizations like MDS plots and identification of outliers; data type is report and plots, typically in PDF or HTML format."
        },
        {
            "task_id": "Part 1-dry-experiment-8",
            "task_description": "Verify the accuracy of the normalized counts by comparing with known control samples or reference datasets, ensuring that the normalization process has preserved biological relevance.",
            "input": "Normalized gene counts; control samples or reference datasets.",
            "output": "Accuracy verification report; data type is report, providing insights into the effectiveness of the normalization."
        },
        {
            "task_id": "Part 1-dry-experiment-9",
            "task_description": "Handle potential errors during data download and alignment by referring to the Recount3 and STAR documentation for troubleshooting. This step is crucial for resolving issues that may arise and ensuring a smooth workflow.",
            "input": "Error messages or logs from Recount3 and STAR; Recount3 and STAR documentation.",
            "output": "Troubleshooting steps taken and resolution status; data type is report or log, documenting the resolution process."
        }
    ],
    "Part 2": [
        {
            "task_id": "Part 2-dry-experiment-1",
            "task_description": "Collect RNA-sequencing data from various databases including CCLE, TCGA, TARGET, Treehouse, and GEO.",
            "input": "List of databases and dataset identifiers: CCLE, TCGA, TARGET, Treehouse, GEO; specific dataset identifiers: GSE213300, GSE201056, GSE179720, GSE221493, GSE221492.",
            "output": "Structured directory containing downloaded RNA-sequencing data files; file format typically FASTQ or BAM."
        },
        {
            "task_id": "Part 2-dry-experiment-2",
            "task_description": "Organize downloaded datasets into a structured directory format for easy access and integration.",
            "input": "Downloaded RNA-sequencing data files from multiple sources; file format typically FASTQ or BAM.",
            "output": "Organized directory structure with consistent sample identifiers and aligned metadata; file format typically FASTQ or BAM."
        },
        {
            "task_id": "Part 2-dry-experiment-3",
            "task_description": "Merge datasets from different sources ensuring consistent sample identifiers and metadata alignment.",
            "input": "Organized RNA-sequencing data files and metadata from various sources; file format typically FASTQ or BAM.",
            "output": "Merged dataset with consistent sample identifiers and aligned metadata; file format typically FASTQ or BAM."
        },
        {
            "task_id": "Part 2-dry-experiment-4",
            "task_description": "Perform quality control checks on raw RNA-sequencing data using FastQC.",
            "input": "Raw RNA-sequencing data files; file format typically FASTQ.",
            "output": "FastQC summary reports detailing quality metrics such as per base sequence quality, GC content, and sequence duplication levels; file format typically HTML."
        },
        {
            "task_id": "Part 2-dry-experiment-5",
            "task_description": "Interpret FastQC reports to identify issues such as low-quality reads, adapter contamination, and overrepresented sequences.",
            "input": "FastQC summary reports; file format typically HTML.",
            "output": "List of identified quality issues and recommended actions for each sample; document format typically text or spreadsheet."
        },
        {
            "task_id": "Part 2-dry-experiment-6",
            "task_description": "Use Trimmomatic to remove low-quality reads and sequences with low expression levels.",
            "input": "Raw RNA-sequencing data files and FastQC reports; file format typically FASTQ and HTML.",
            "output": "Trimmed RNA-sequencing data files with improved quality; file format typically FASTQ."
        },
        {
            "task_id": "Part 2-dry-experiment-7",
            "task_description": "Re-run FastQC on trimmed reads to confirm improvement in quality.",
            "input": "Trimmed RNA-sequencing data files; file format typically FASTQ.",
            "output": "FastQC summary reports for trimmed data; file format typically HTML."
        },
        {
            "task_id": "Part 2-dry-experiment-8",
            "task_description": "Normalize expression levels using RSEM to TPM, RPKM, and FPKM.",
            "input": "Trimmed RNA-sequencing data files; file format typically FASTQ.",
            "output": "Normalized expression matrix with TPM, RPKM, and FPKM values; file format typically CSV or TSV."
        },
        {
            "task_id": "Part 2-dry-experiment-9",
            "task_description": "Apply log2 transformation and z-score normalization for further analysis.",
            "input": "Normalized expression matrix; file format typically CSV or TSV.",
            "output": "Log2 transformed and z-score normalized expression matrix; file format typically CSV or TSV."
        },
        {
            "task_id": "Part 2-dry-experiment-10",
            "task_description": "Identify metabolic genes and pathways from the KEGG database and map them to RNA-sequencing data.",
            "input": "KEGG database genes and pathways; RNA-sequencing data; file format typically CSV or TSV.",
            "output": "List of metabolic genes with corresponding expression levels for all samples; file format typically CSV or TSV."
        }
    ],
    "Part 3": [
        {
            "task_id": "Part 3-dry-experiment-1",
            "task_description": "Perform quality control to identify and remove doublets using DoubletFinder. This step ensures that each cell is uniquely represented in the dataset, improving the accuracy of downstream analyses.",
            "input": "Single-cell RNA sequencing data in the form of feature-barcode matrices, typically in CSV or HDF5 format with cells as columns and genes as rows.",
            "output": "Filtered single-cell RNA sequencing data with doublets removed, in the same matrix format."
        },
        {
            "task_id": "Part 3-dry-experiment-2",
            "task_description": "Align reads and generate feature-barcode matrices using CellRanger. This step processes raw sequencing data to quantify gene expression levels across individual cells.",
            "input": "Raw sequencing reads from single-cell RNA sequencing, typically in FASTQ format, along with reference genome files.",
            "output": "Feature-barcode matrices, which include counts of gene expression per cell, typically in CSV or HDF5 format."
        },
        {
            "task_id": "Part 3-dry-experiment-3",
            "task_description": "Normalize and scale data using Seurat's SCTransform function. This step adjusts for technical variances and prepares the data for accurate comparison across cells.",
            "input": "Feature-barcode matrices generated from single-cell RNA sequencing data, in CSV or HDF5 format.",
            "output": "Normalized and scaled gene expression data, in matrix format, ready for further analysis, typically in CSV or HDF5 format."
        },
        {
            "task_id": "Part 3-dry-experiment-4",
            "task_description": "Integrate all samples using Harmony for batch correction and integration. This step aligns data from multiple samples, correcting for batch effects to ensure comparability.",
            "input": "Normalized single-cell RNA sequencing data from multiple samples, typically in matrix format, along with metadata for batch information.",
            "output": "Integrated single-cell RNA sequencing data with batch effects corrected, in matrix format, typically in CSV or HDF5 format."
        },
        {
            "task_id": "Part 3-dry-experiment-5",
            "task_description": "Perform PCA on the most variable genes identified by SCTransform. This dimensionality reduction technique identifies the principal components that capture the most variance in the data.",
            "input": "Normalized and transformed single-cell RNA sequencing data, focusing on the most variable genes, typically in matrix format.",
            "output": "Principal component scores for each cell, in matrix format with cells as rows and principal components as columns, typically in CSV or HDF5 format."
        },
        {
            "task_id": "Part 3-dry-experiment-6",
            "task_description": "Calculate UMAP dimensions for visualization of the data. UMAP is used to create a two-dimensional representation of the data for easier visualization and interpretation.",
            "input": "Principal component scores for single-cell RNA sequencing data, typically in matrix format.",
            "output": "UMAP coordinates for each cell, typically in a two-dimensional format for visualization, in CSV format."
        },
        {
            "task_id": "Part 3-dry-experiment-7",
            "task_description": "Perform clustering using shared nearest-neighbors and Louvain algorithm. This step groups cells into clusters based on their gene expression profiles, aiding in the identification of distinct cell types or states.",
            "input": "UMAP coordinates and principal component scores for single-cell RNA sequencing data, typically in matrix format.",
            "output": "Cluster assignments for each cell, typically as a vector indicating the cluster membership of each cell, in CSV format."
        }
    ],
    "Part 4": [
        {
            "task_id": "Part 4-dry-experiment-1",
            "task_description": "Normalize RNA-seq data using the Trimmed Mean of M-values (TMM) method implemented in the edgeR package.",
            "input": "RNA-seq datasets GSE213300, GSE201056, GSE179720, GSE221493, and GSE221492. These are gene expression datasets containing raw count data of RNA-seq experiments (type: dataset).",
            "output": "Normalized gene expression data with scaling factors applied to adjust for library size differences. The output includes a matrix of normalized counts (type: dataset)."
        },
        {
            "task_id": "Part 4-dry-experiment-2",
            "task_description": "Preprocess the data by filtering out low-quality and non-primary tumor samples using criteria such as minimum read counts and quality scores.",
            "input": "Normalized RNA-seq data from the previous step, with criteria including minimum read counts (>10) and quality scores (Phred score >30). Genomic features must map to an Entrez ID using the org.Hs.eg.db Bioconductor package (type: dataset and parameters).",
            "output": "Filtered gene expression dataset containing only high-quality primary tumor samples, represented as a matrix with Entrez ID annotations (type: dataset)."
        },
        {
            "task_id": "Part 4-dry-experiment-3",
            "task_description": "Fit a linear model to the normalized data using the limma package, including sarcoma subtypes and normal tissues in the design matrix.",
            "input": "Filtered gene expression dataset and a design matrix specifying sarcoma subtypes and normal tissues. The design matrix is constructed to include factors for subtype and tissue type (type: dataset and matrix).",
            "output": "Fitted linear model object containing coefficients and statistics for each gene, stored as an object compatible with limma's analysis functions (type: model object)."
        },
        {
            "task_id": "Part 4-dry-experiment-4",
            "task_description": "Correct for batch effects in the expression data using the removeBatchEffect function from the limma package.",
            "input": "Filtered gene expression dataset and batch information such as tissue source site. The batch information is used to adjust the expression values to remove systematic biases (type: dataset and batch information).",
            "output": "Batch-corrected gene expression data, with adjusted values to minimize batch-related variance, represented as a matrix (type: dataset)."
        },
        {
            "task_id": "Part 4-dry-experiment-5",
            "task_description": "Identify differentially expressed genes using the empirical Bayes method in the limma package, adjusting for false discovery rate.",
            "input": "Batch-corrected gene expression data and statistical thresholds for significance (p-value <0.05 and FDR adjustment using the Benjamini-Hochberg method) (type: dataset and parameters).",
            "output": "List of differentially expressed genes with statistical significance measures, including adjusted p-values and log-fold changes (type: list)."
        },
        {
            "task_id": "Part 4-dry-experiment-6",
            "task_description": "Perform Gene Ontology enrichment analysis on effector genes of differentially activated circuits using the enrichR package.",
            "input": "List of effector genes from differentially activated circuits and the Gene Ontology database, focusing on the biological process ontology. The input includes gene identifiers compatible with the enrichR package (type: list and database).",
            "output": "Enriched Gene Ontology terms related to biological processes, with associated p-values and enrichment scores (type: list)."
        },
        {
            "task_id": "Part 4-dry-experiment-7",
            "task_description": "Visualize high-dimensional data using the t-SNE method with the Rtsne package.",
            "input": "Normalized counts and activity values from RNA-seq datasets GSE213300, GSE201056, GSE179720, GSE221493, and GSE221492. Parameters include perplexity = 30 and learning rate = 200 (type: dataset and parameters).",
            "output": "t-SNE plot showing the structure of the high-dimensional data, providing a visual representation of sample clustering (type: plot)."
        },
        {
            "task_id": "Part 4-dry-experiment-8",
            "task_description": "Create heatmaps to visualize sample clustering based on differential signaling results using the pheatmap package.",
            "input": "Expression data and clustering parameters, including distance measures (euclidean for features and correlation for samples) and clustering method (complete clustering) (type: dataset and parameters).",
            "output": "Heatmap visualizing sample clustering, highlighting patterns of differential expression across samples (type: plot)."
        },
        {
            "task_id": "Part 4-dry-experiment-9",
            "task_description": "Identify common dysregulated circuits across all sarcoma subtypes using statistical tests and FDR adjustment.",
            "input": "Gene expression datasets GSE213300, GSE201056, GSE179720, GSE221493, and GSE221492. Statistical thresholds include p-value <0.05 and FDR adjustment using the Benjamini-Hochberg method (type: dataset and parameters).",
            "output": "List of common dysregulated circuits with significance measures, including adjusted p-values and circuit identifiers (type: list)."
        },
        {
            "task_id": "Part 4-dry-experiment-10",
            "task_description": "Identify unique dysregulated circuits in specific sarcoma subtypes using statistical tests and FDR adjustment.",
            "input": "Gene expression datasets GSE213300, GSE201056, GSE179720, GSE221493, and GSE221492. Statistical thresholds include p-value <0.05 and FDR adjustment using the Benjamini-Hochberg method (type: dataset and parameters).",
            "output": "List of unique dysregulated circuits with significance measures, including adjusted p-values and circuit identifiers (type: list)."
        },
        {
            "task_id": "Part 4-dry-experiment-11",
            "task_description": "Annotate the functions of common and unique dysregulated circuits using relevant databases and literature.",
            "input": "List of dysregulated circuits and relevant databases such as KEGG and Reactome. The input includes circuit identifiers and pathway databases (type: list and databases).",
            "output": "Annotated functions and biological significance of dysregulated circuits, providing detailed descriptions of their roles in biological processes (type: list)."
        }
    ],
    "Part 5": [
        {
            "task_id": "Part 5-dry-experiment-1",
            "task_description": "Access the KEGG database and download the list of metabolic genes and pathways.",
            "input": "KEGG database URL (https://www.genome.jp/kegg/), a web-based resource for biological pathways.",
            "output": "List of metabolic genes and pathways, typically in a downloadable file format like TXT or CSV."
        },
        {
            "task_id": "Part 5-dry-experiment-2",
            "task_description": "Identify 1,620 genes representing 85 different metabolic pathways from the KEGG database.",
            "input": "Downloaded list of metabolic genes and pathways from the KEGG database.",
            "output": "A subset of 1,620 metabolic genes representing 85 different pathways, typically in a CSV or TXT file."
        },
        {
            "task_id": "Part 5-dry-experiment-3",
            "task_description": "Map metabolic genes to RNA-sequencing data from specified datasets.",
            "input": "List of 1,620 metabolic genes from KEGG and RNA-seq data (FASTQ files) from datasets GSE213300, GSE201056, GSE179720, GSE221493, and GSE221492.",
            "output": "Mapped gene lists with their expression data, typically in a tabular format like CSV or TSV."
        },
        {
            "task_id": "Part 5-dry-experiment-4",
            "task_description": "Align RNA-seq reads to the reference genome using STAR and quantify gene expression levels using featureCounts.",
            "input": "RNA-seq reads (FASTQ files) from datasets and reference genome annotation file (annotation.gtf). STAR parameters: --runThreadN 8 --outSAMtype BAM SortedByCoordinate --quantMode GeneCounts. featureCounts parameters: -T 8 -t exon -g gene_id -a annotation.gtf -o counts.txt.",
            "output": "Aligned RNA-seq reads in BAM format and gene expression counts in a text file (counts.txt)."
        },
        {
            "task_id": "Part 5-dry-experiment-5",
            "task_description": "Calculate pathway activity scores across different cancer types using normalized RNA-seq data.",
            "input": "Normalized RNA-seq data from datasets GSE213300, GSE201056, GSE179720, GSE221493, and GSE221492.",
            "output": "Pathway activity scores for each metabolic pathway and cancer type, typically in a tabular format like CSV."
        },
        {
            "task_id": "Part 5-dry-experiment-6",
            "task_description": "Perform functional enrichment analysis using the calculated pathway activity scores to identify differentially regulated pathways.",
            "input": "Pathway activity scores and KEGG database for pathway information.",
            "output": "List of enriched pathways with statistical significance values, often visualized as bar plots or heatmaps."
        },
        {
            "task_id": "Part 5-dry-experiment-7",
            "task_description": "Perform Gene Set Enrichment Analysis (GSEA) using RNA-seq data and KEGG metabolic gene sets.",
            "input": "Normalized RNA-seq data from specified datasets and KEGG metabolic gene sets.",
            "output": "GSEA results including enrichment scores and significance values, visualized as enrichment plots or heatmaps."
        }
    ],
    "Part 6": [
        {
            "task_id": "Part 6-dry-experiment-1",
            "task_description": "Acquire single-cell RNA sequencing data from public datasets and preprocess it using quality control and normalization steps.",
            "input": "Single-cell RNA sequencing data from GSE221493 and GSE221492 datasets, containing raw gene expression counts from primary DDLPS, WDLPS, liposarcoma, and peritumoral fat tissue samples.",
            "output": "Preprocessed single-cell RNA-seq data with low-quality cells filtered out based on gene counts and mitochondrial content, normalized using SCTransform to account for technical variations. Data type: processed single-cell RNA-seq dataset."
        },
        {
            "task_id": "Part 6-dry-experiment-2",
            "task_description": "Perform dimensionality reduction using PCA and visualize clusters with UMAP, then identify and annotate cell clusters.",
            "input": "Preprocessed single-cell RNA-seq data with normalized gene expression values.",
            "output": "Annotated cell clusters visualized in two dimensions using UMAP, with clusters identified through PCA and Seurat's clustering functions. Data type: UMAP plots and annotated cluster data."
        },
        {
            "task_id": "Part 6-dry-experiment-3",
            "task_description": "Acquire and normalize bulk RNA-seq data from specified datasets using TMM normalization.",
            "input": "Bulk RNA-seq data from GSE213300, GSE201056, GSE179720, GSE221493, and GSE221492 datasets, containing raw gene expression counts.",
            "output": "Normalized bulk RNA-seq data transformed to log2 counts per million (CPM) using the TMM method. Data type: normalized bulk RNA-seq dataset."
        },
        {
            "task_id": "Part 6-dry-experiment-4",
            "task_description": "Integrate single-cell RNA-seq data with bulk RNA-seq data using Seurat to identify anchors and combine datasets.",
            "input": "Normalized single-cell RNA-seq data and normalized bulk RNA-seq data.",
            "output": "Integrated RNA-seq dataset combining single-cell and bulk data, facilitating joint analysis and visualization. Data type: integrated RNA-seq dataset."
        },
        {
            "task_id": "Part 6-dry-experiment-5",
            "task_description": "Perform differential gene expression analysis between identified tumor cell clusters.",
            "input": "Integrated RNA-seq dataset with annotated cell clusters.",
            "output": "List of differentially expressed genes between clusters, identified using Seurat's FindMarkers function with a log2-fold change threshold of 0.4 and an adjusted p-value cutoff of 0.05. Data type: differential expression results."
        },
        {
            "task_id": "Part 6-dry-experiment-6",
            "task_description": "Conduct pathway enrichment analysis on differentially expressed genes using ClusterProfiler.",
            "input": "List of differentially expressed genes from the integrated RNA-seq dataset.",
            "output": "Enriched pathways identified using KEGG and MSigDB databases, visualized with bar plots and dot plots. Data type: pathway enrichment analysis results."
        },
        {
            "task_id": "Part 6-dry-experiment-7",
            "task_description": "Analyze the distribution of tumor cell clusters between WD and DD components using statistical tests.",
            "input": "Annotated cell clusters from single-cell RNA-seq data, categorized by WD and DD components.",
            "output": "Proportions of tumor cells from WD and DD components within each cluster, visualized using bar plots and pie charts, with statistical significance assessed using chi-squared tests. Data type: distribution analysis results."
        },
        {
            "task_id": "Part 6-dry-experiment-8",
            "task_description": "Perform differential gene expression analysis specifically between WD and DD tumor cells.",
            "input": "Clustered single-cell RNA-seq data with WD and DD annotations.",
            "output": "List of differentially expressed genes between WD and DD tumor cells, identified using Seurat's FindMarkers function. Data type: differential expression results."
        },
        {
            "task_id": "Part 6-dry-experiment-9",
            "task_description": "Validate gene expression signatures identified from single-cell RNA-seq using bulk RNA-seq data.",
            "input": "Gene expression signatures from single-cell RNA-seq data and normalized bulk RNA-seq data from specified datasets.",
            "output": "Comparison of expression levels across different tumor types, visualized using hierarchical clustering with the ward.D2 method. Data type: validation results."
        },
        {
            "task_id": "Part 6-dry-experiment-10",
            "task_description": "Integrate results from differential expression and pathway enrichment analyses with single-cell data to identify common pathways.",
            "input": "Results from differential expression and pathway enrichment analyses, combined with single-cell RNA-seq data.",
            "output": "Integrated visualization of common and unique dysregulated pathways in highly differentiated and dedifferentiated liposarcoma, using UMAP plots, heatmaps, and pathway enrichment plots. Data type: integrated analysis results."
        }
    ]
}